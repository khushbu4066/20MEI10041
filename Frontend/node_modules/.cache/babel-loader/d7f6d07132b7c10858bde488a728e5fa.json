{"ast":null,"code":"var _jsxFileName = \"F:\\\\Task-2\\\\Frontend\\\\src\\\\components\\\\Calculator.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Display from \"./Display\";\nimport Buttons from \"./Buttons\";\nimport \"./styles/Calculator.css\";\nimport { evaluate, round } from \"mathjs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Calculator() {\n  _s();\n\n  const [input, setInput] = useState(\"\");\n  const [answer, setAnswer] = useState(\"\"); //input\n\n  const inputHandler = event => {\n    if (answer === \"Invalid Input!!\") return;\n    let val = event.target.innerText;\n    if (val === \"x2\") val = \"^2\";else if (val === \"x3\") val = \"^3\";else if (val === \"3√\") val = \"^(1÷3)\";else if (val === \"log\") val = \"log(\";\n    let str = input + val;\n    if (str.length > 14) return;\n\n    if (answer !== \"\") {\n      setInput(answer + val);\n      setAnswer(\"\");\n    } else setInput(str); // setInput(str);\n\n  }; //Clear screen\n\n\n  const clearInput = () => {\n    setInput(\"\");\n    setAnswer(\"\");\n  }; // check brackets are balanced or not\n\n\n  const checkBracketBalanced = expr => {\n    let stack = [];\n\n    for (let i = 0; i < expr.length; i++) {\n      let x = expr[i];\n\n      if (x === \"(\") {\n        stack.push(x);\n        continue;\n      }\n\n      if (x === \")\") {\n        if (stack.length === 0) return false;else stack.pop();\n      }\n    }\n\n    return stack.length === 0;\n  }; // calculate final answer\n\n\n  const calculateAns = () => {\n    if (input === \"\") return;\n    let result = 0;\n    let finalexpression = input; //  finalexpression = input.replaceAll(\"^\", \"**\");  //for eval()\n\n    finalexpression = finalexpression.replaceAll(\"x\", \"*\");\n    finalexpression = finalexpression.replaceAll(\"÷\", \"/\"); // evaluate square root\n\n    let noSqrt = input.match(/√[0-9]+/gi);\n\n    if (noSqrt !== null) {\n      let evalSqrt = input;\n\n      for (let i = 0; i < noSqrt.length; i++) {\n        evalSqrt = evalSqrt.replace(noSqrt[i], `sqrt(${noSqrt[i].substring(1)})`);\n      }\n\n      finalexpression = evalSqrt;\n    }\n\n    try {\n      // check brackets are balanced or not\n      if (!checkBracketBalanced(finalexpression)) {\n        const errorMessage = {\n          message: \"Brackets are not balanced!\"\n        };\n        throw errorMessage;\n      }\n\n      result = evaluate(finalexpression); //mathjs\n    } catch (error) {\n      result = error.message === \"Brackets are not balanced!\" ? \"Brackets are not balanced!\" : \"Invalid Input!!\"; //error.message;\n    }\n\n    isNaN(result) ? setAnswer(result) : setAnswer(round(result, 3));\n  }; // remove last character\n\n\n  const backspace = () => {\n    if (answer !== \"\") {\n      setInput(answer.toString().slice(0, -1));\n      setAnswer(\"\");\n    } else setInput(prev => prev.slice(0, -1));\n  }; // change prefix of expression\n\n\n  const changePlusMinus = () => {\n    //need to change for answer\n    if (answer === \"Invalid Input!!\") return;else if (answer !== \"\") {\n      let ans = answer.toString();\n\n      if (ans.charAt(0) === \"-\") {\n        let plus = \"+\";\n        setInput(plus.concat(ans.slice(1, ans.length)));\n      } else if (ans.charAt(0) === \"+\") {\n        let minus = \"-\";\n        setInput(minus.concat(ans.slice(1, ans.length)));\n      } else {\n        let minus = \"-\";\n        setInput(minus.concat(ans));\n      }\n\n      setAnswer(\"\");\n    } else {\n      if (input.charAt(0) === \"-\") {\n        let plus = \"+\";\n        setInput(prev => plus.concat(prev.slice(1, prev.length)));\n      } else if (input.charAt(0) === \"+\") {\n        let minus = \"-\";\n        setInput(prev => minus.concat(prev.slice(1, prev.length)));\n      } else {\n        let minus = \"-\";\n        setInput(prev => minus.concat(prev));\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main\",\n        children: [/*#__PURE__*/_jsxDEV(Display, {\n          input: input,\n          setInput: setInput,\n          answer: answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n          inputHandler: inputHandler,\n          clearInput: clearInput,\n          backspace: backspace,\n          changePlusMinus: changePlusMinus,\n          calculateAns: calculateAns\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Calculator, \"iUfZxVlVF9wxxGAGF8Za5kGZieQ=\");\n\n_c = Calculator;\nexport default Calculator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"sources":["F:/Task-2/Frontend/src/components/Calculator.js"],"names":["React","useState","Display","Buttons","evaluate","round","Calculator","input","setInput","answer","setAnswer","inputHandler","event","val","target","innerText","str","length","clearInput","checkBracketBalanced","expr","stack","i","x","push","pop","calculateAns","result","finalexpression","replaceAll","noSqrt","match","evalSqrt","replace","substring","errorMessage","message","error","isNaN","backspace","toString","slice","prev","changePlusMinus","ans","charAt","plus","concat","minus"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Display from \"./Display\";\nimport Buttons from \"./Buttons\";\nimport \"./styles/Calculator.css\";\nimport { evaluate, round } from \"mathjs\";\n\nfunction Calculator() {\n  const [input, setInput] = useState(\"\");\n  const [answer, setAnswer] = useState(\"\");\n\n  //input\n  const inputHandler = (event) => {\n    if (answer === \"Invalid Input!!\") return;\n    let val = event.target.innerText;\n\n    if (val === \"x2\") val = \"^2\";\n    else if (val === \"x3\") val = \"^3\";\n    else if (val === \"3√\") val = \"^(1÷3)\";\n    else if (val === \"log\") val = \"log(\";\n\n    let str = input + val;\n    if (str.length > 14) return;\n\n    if (answer !== \"\") {\n      setInput(answer + val);\n      setAnswer(\"\");\n    } else setInput(str);\n    // setInput(str);\n  };\n\n  //Clear screen\n  const clearInput = () => {\n    setInput(\"\");\n    setAnswer(\"\");\n  };\n\n  // check brackets are balanced or not\n  const checkBracketBalanced = (expr) => {\n    let stack = [];\n    for (let i = 0; i < expr.length; i++) {\n      let x = expr[i];\n      if (x === \"(\") {\n        stack.push(x);\n        continue;\n      }\n\n      if (x === \")\") {\n        if (stack.length === 0) return false;\n        else stack.pop();\n      }\n    }\n    return stack.length === 0;\n  };\n\n  // calculate final answer\n  const calculateAns = () => {\n    if (input === \"\") return;\n    let result = 0;\n    let finalexpression = input;\n    //  finalexpression = input.replaceAll(\"^\", \"**\");  //for eval()\n    finalexpression = finalexpression.replaceAll(\"x\", \"*\");\n    finalexpression = finalexpression.replaceAll(\"÷\", \"/\");\n\n    // evaluate square root\n    let noSqrt = input.match(/√[0-9]+/gi);\n\n    if (noSqrt !== null) {\n      let evalSqrt = input;\n      for (let i = 0; i < noSqrt.length; i++) {\n        evalSqrt = evalSqrt.replace(\n          noSqrt[i],\n          `sqrt(${noSqrt[i].substring(1)})`\n        );\n      }\n      finalexpression = evalSqrt;\n    }\n\n    try {\n      // check brackets are balanced or not\n      if (!checkBracketBalanced(finalexpression)) {\n        const errorMessage = { message: \"Brackets are not balanced!\" };\n        throw errorMessage;\n      }\n      result = evaluate(finalexpression); //mathjs\n    } catch (error) {\n      result =\n        error.message === \"Brackets are not balanced!\"\n          ? \"Brackets are not balanced!\"\n          : \"Invalid Input!!\"; //error.message;\n    }\n    isNaN(result) ? setAnswer(result) : setAnswer(round(result, 3));\n  };\n\n  // remove last character\n  const backspace = () => {\n    if (answer !== \"\") {\n      setInput(answer.toString().slice(0, -1));\n      setAnswer(\"\");\n    } else setInput((prev) => prev.slice(0, -1));\n  };\n\n  // change prefix of expression\n  const changePlusMinus = () => {\n    //need to change for answer\n    if (answer === \"Invalid Input!!\") return;\n    else if (answer !== \"\") {\n      let ans = answer.toString();\n      if (ans.charAt(0) === \"-\") {\n        let plus = \"+\";\n        setInput(plus.concat(ans.slice(1, ans.length)));\n      } else if (ans.charAt(0) === \"+\") {\n        let minus = \"-\";\n        setInput(minus.concat(ans.slice(1, ans.length)));\n      } else {\n        let minus = \"-\";\n        setInput(minus.concat(ans));\n      }\n      setAnswer(\"\");\n    } else {\n      if (input.charAt(0) === \"-\") {\n        let plus = \"+\";\n        setInput((prev) => plus.concat(prev.slice(1, prev.length)));\n      } else if (input.charAt(0) === \"+\") {\n        let minus = \"-\";\n        setInput((prev) => minus.concat(prev.slice(1, prev.length)));\n      } else {\n        let minus = \"-\";\n        setInput((prev) => minus.concat(prev));\n      }\n    }\n  };\n\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"main\">\n          <Display input={input} setInput={setInput} answer={answer} />\n          <Buttons\n            inputHandler={inputHandler}\n            clearInput={clearInput}\n            backspace={backspace}\n            changePlusMinus={changePlusMinus}\n            calculateAns={calculateAns}\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Calculator;\n"]},"metadata":{},"sourceType":"module"}